name: Release

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:   
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Discord Commits
        uses: Sniddl/discord-commits@v1.6
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          embed: '{ "title": "{{ commit.title }}", "description": "{{ commit.description }}", "url": "{{ commit.url }}", "author": { "name": "{{ commit.author.name }}", "icon_url": "https://github.com/{{ commit.author.username }}.png"}, "footer": "" }'

      # Setup JDK 18 to build the project
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'
          node-version: '16'

      # Build the maven project
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots package
      
      # Check the commit and see what version needs to be changed
      - name: conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3.18.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version-file: './src/main/resources/version.yml'
      
      # Creat a release
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ steps.changelog.outputs.version }}
          name: ${{ steps.changelog.outputs.version }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
